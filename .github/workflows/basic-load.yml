name: dda check mods

on:
  workflow_dispatch:
#  push:
 #   branches:
 #   - main
    
#concurrency:
#  group: load-build-${{ github.event.pull_request.number || github.ref_name }}
#  cancel-in-progress: true

jobs:
  fetch_release:
    runs-on: ubuntu-latest
    outputs: 
      releases: ${{ steps.fetch.outputs.releases }}
    steps:
      - env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        id: fetch
        run: |
          gh api \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            /repos/waveyl/dda-mod-ci/releases?per_page=1 > data.json
          matrix=$(
            echo '{ "release" : '
            (jq '[.[]|.tag_name]' data.json | sed 's/[[:space:]]//g')
            echo '}'
              )
          matrix=$(echo $matrix | sed ':a;N;$!ba;s/\n/;/g') 
          matrix1="{ \"release\" : [ \"cdda-experimental-2023-07-23-0530\", \"cdda-experimental-2023-07-22-2222\" ] }"
          echo $matrix1
          echo $matrix
          echo "releases=$matrix" >> $GITHUB_OUTPUT
 # check-matrix:
 #   runs-on: ubuntu-latest
 #   needs: fetch_release
 #   steps:
 #     - name: Check matrix definition
 #       run: |
 #         matrix='${{ needs.fetch_release.outputs.releases }}'
 #         echo $matrix
 #         echo $matrix | jq .
  matrix_test:
    needs: [ fetch_release ]
    strategy:
      fail-fast: false
      matrix: ${{ fromJSON(needs.fetch_release.outputs.releases) }}
    runs-on: ubuntu-latest
    continue-on-error: true
    name: ${{ matrix.release }}
    env:
      ZSTD_CLEVEL: 17
      COMPILER: clang++-17
      TILES: 0
      SOUND: 0
      LOCALIZE: 0
      MODS:
      EXTRA_TEST_OPTS: --error-format=github-action
      PCH: 1
      RELEASE: 1
      ARCHIVE_SUCCESS: basic-build
      CCACHE_LIMIT: 2G
      TEST_STAGE: 1
      CCACHE_FILECLONE: true
      CCACHE_HARDLINK: true
      CCACHE_NOCOMPRESS: true
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  steps:
    - name: checkout repository
      uses: actions/checkout@v4
      with:
        repository: 'CleverRaven/Cataclysm-DDA'
        ref: ${{ matrix.release }}
    - name: cnk
      run: |
        gh api \
          -H "Accept: application/vnd.github+json" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          /repos/linonetwo/CDDA-Kenan-Modpack-Chinese/releases?per_page=1 > cnk.data
        url=$(jq '.[]|.assets |.[0] |.browser_download_url' cnk.data | sed 's/"//g')
        echo $url
        curl -o 'Kenan-Modpack-Mod.zip' -L $url
        unzip -q 'Kenan-Modpack-Mod.zip'
        rm -rf 'Kenan-Modpack-Chinese/CDDA-Sky-Island'
        cp -r Kenan-Modpack-Chinese/* data/mods/
    - name: install dependencies (ubuntu)
      run: |
          sudo apt-get update
          sudo apt-get install -y jq unzip curl python3
    - name: get test suite
      run: |
        gh api \
          -H "Accept: application/vnd.github+json" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          /repos/waveyl/dda-mod-ci/releases/tags/${{matrix.release}} > release.data
        url=$(jq '.assets |.[0] |.browser_download_url' release.data | sed 's/"//g')
        echo $url
        curl -o 'cataclysm-tiles' -L $url
        # unzip -q 'cata_test.zip'
        #  mv 'cata_test' 'tests/'
        sudo chmod a+x cataclysm-tiles
   #     make localization LANGUAGES=all
    - name: prepare runner scripts
      run: |
        mkdir -p modci
        cd modci
        git clone https://github.com/waveyl/dda-mod-ci/ .
        cd ..
        sudo chmod a+x ./modci/pyutils/basic_get_mods.py
        sudo chmod a+x ./modci/pyutils/basic_load_all.sh
    - name: run checks (aggregate without build)
      env:
        EXE: ./cataclysm-tiles
        LOG_DIR: ./modci-logs
        MAX_ITERS: 80
      run: bash ./modci/pyutils/basic_load_all.sh
